(->
  Meteor.subscribe "_roles_own_user_roles"
  
  ###
  Convenience functions for use on client.
  
  NOTE: You must restrict user actions on the server-side; any
  client-side checks are strictly for convenience and must not be
  trusted.
  
  @module Helpers
  ###
  
  #//////////////////////////////////////////////////////////
  # Handlebars helpers
  #
  # Use a semi-private variable rather than declaring Handlebars
  # helpers directly so that we can unit test the helpers.
  # XXX For some reason, the Handlebars helpers are not registered 
  # before the tests run.
  #
  
  ###
  Handlebars helper to check if current user is in at least one
  of the target roles.  For use in client-side templates.
  
  @method isInRole
  @param {String} role name of role or comma-seperated list of roles
  @return {Boolean} true if current user is in at least one of the target roles
  ###
  Roles._handlebarsHelpers = isInRole: (role) ->
    user = Meteor.user()
    comma = role and role.indexOf(",")
    roles = undefined
    return false  unless user
    if comma isnt -1
      roles = _.reduce(role.split(","), (memo, r) ->
        return memo  if not r or not r.trim()
        memo.push r.trim()
        memo
      , [])
    else
      roles = [role]
    Roles.userIsInRole user, roles

  if "undefined" isnt typeof Handlebars
    _.each Roles._handlebarsHelpers, (func, name) ->
      Handlebars.registerHelper name, func

  else
    console.log "WARNING: Roles Handlebars helpers not registered. Handlebars not defined"
)()
